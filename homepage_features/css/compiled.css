  html {
    height: 100%;
  }
  body {
    margin: 0;
    min-height: 100%;
    background-color: #fff;
    font-family: Arial, sans-serif;
    font-size: 14px;
    line-height: 20px;
    color: #333;
  }
  img {
    max-width: 100%;
    vertical-align: middle;
    display: inline-block;
  }
  h1 {
    font-weight: bold;
    margin-bottom: 10px;
  }
  h1 {
    font-size: 38px;
    line-height: 44px;
    margin-top: 20px;
  }
  /**
   * ## Note
   * Safari (on both iOS and OS X) does not handle viewport units (vh, vw) well.
   * For example percentage units do not work on descendants of elements that
   * have any dimensions expressed in viewport units. It also doesn’t handle them at
   * all in `calc()`.
   */
  /**
   * Wrapper around all lightbox elements
   *
   * 1. Since the lightbox can receive focus, IE also gives it an outline.
   * 2. Fixes flickering on Chrome when a transition is in progress
   *    underneath the lightbox.
   */
  /**
   * Neat trick to bind the rubberband effect to our canvas instead of the whole
   * document on iOS. It also prevents a bug that causes the document underneath to scroll.
   */
  /* .w-lightbox-content */
  /*
   * 1. Remove default margin set by user-agent on the <figure> element.
   */
  /**
   * IE adds image dimensions as width and height attributes on the IMG tag,
   * but we need both width and height to be set to auto to enable scaling.
   */
  /**
   * 1. Reset if style is set by user on "All Images"
   */
  /*
   * Without specifying the with and height inside the SVG, all versions of IE render the icon too small.
   * The bug does not seem to manifest itself if the elements are tall enough such as the above arrows.
   * (http://stackoverflow.com/questions/16092114/background-size-differs-in-internet-explorer)
   */
  /**
   * 1. All IE versions add extra space at the bottom without this.
   */
  /*
   * 1. We use content-box to avoid having to do `width: calc(10vh + 2vw)`
   *    which doesn’t work in Safari anyway.
   * 2. Chrome renders images pixelated when switching to GPU. Making sure
   *    the parent is also rendered on the GPU (by setting translate3d for
   *    example) fixes this behavior.
   */
  /*
   * Spinner
   *
   * Absolute pixel values are used to avoid rounding errors that would cause
   * the white spinning element to be misaligned with the track.
   */
  /*
   * Utility classes
   */
  @media (min-width: 768px) {
    /* .w-lightbox-content */
  }
  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  
/* end webflow stock */
/* webflow custom css */

.body {
  font-family: Bitter, serif;
}

.recent_work_new {
  font-family: 'Nhaasgroteskdspro 45lt', sans-serif;
  color: #060;
  font-size: 22px;
  line-height: 60px;
}

.recent_work_purchase_option {
  display: inline-block;
  margin-top: 18px;
  font-family: Garamondpremrpro, sans-serif;
  color: #6b6b6b;
  font-size: 22px;
  line-height: 60px;
  text-decoration: none;
  text-transform: uppercase;
}

.recent_work_purchase_decoration {
  width: 160px;
  margin-left: 30px;
  padding-top: 0px;
  border-bottom: 2px solid #b4b4b4;
}

@font-face {
  font-family: 'Nhaasgroteskdspro 45lt';
  src: url('../fonts/neue_haas/NHaasGroteskDSPro-45Lt.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: 'Garamondpremrpro';
  src: url('../fonts/garamond/GaramondPremrPro.otf') format('opentype');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}/* webflow stock css */
  * {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  html {
    height: 100%;
  }
  body {
    margin: 0;
    min-height: 100%;
    background-color: #fff;
    font-family: Arial, sans-serif;
    font-size: 14px;
    line-height: 20px;
    color: #333;
  }
  img {
    max-width: 100%;
    vertical-align: middle;
    display: inline-block;
  }
  h1 {
    font-weight: bold;
    margin-bottom: 10px;
  }
  h1 {
    font-size: 38px;
    line-height: 44px;
    margin-top: 20px;
  }
  /**
   * ## Note
   * Safari (on both iOS and OS X) does not handle viewport units (vh, vw) well.
   * For example percentage units do not work on descendants of elements that
   * have any dimensions expressed in viewport units. It also doesn’t handle them at
   * all in `calc()`.
   */
  /**
   * Wrapper around all lightbox elements
   *
   * 1. Since the lightbox can receive focus, IE also gives it an outline.
   * 2. Fixes flickering on Chrome when a transition is in progress
   *    underneath the lightbox.
   */
  /**
   * Neat trick to bind the rubberband effect to our canvas instead of the whole
   * document on iOS. It also prevents a bug that causes the document underneath to scroll.
   */
  /* .w-lightbox-content */
  /*
   * 1. Remove default margin set by user-agent on the <figure> element.
   */
  /**
   * IE adds image dimensions as width and height attributes on the IMG tag,
   * but we need both width and height to be set to auto to enable scaling.
   */
  /**
   * 1. Reset if style is set by user on "All Images"
   */
  /*
   * Without specifying the with and height inside the SVG, all versions of IE render the icon too small.
   * The bug does not seem to manifest itself if the elements are tall enough such as the above arrows.
   * (http://stackoverflow.com/questions/16092114/background-size-differs-in-internet-explorer)
   */
  /**
   * 1. All IE versions add extra space at the bottom without this.
   */
  /*
   * 1. We use content-box to avoid having to do `width: calc(10vh + 2vw)`
   *    which doesn’t work in Safari anyway.
   * 2. Chrome renders images pixelated when switching to GPU. Making sure
   *    the parent is also rendered on the GPU (by setting translate3d for
   *    example) fixes this behavior.
   */
  /*
   * Spinner
   *
   * Absolute pixel values are used to avoid rounding errors that would cause
   * the white spinning element to be misaligned with the track.
   */
  /*
   * Utility classes
   */
  @media (min-width: 768px) {
    /* .w-lightbox-content */
  }
  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  
/* end webflow stock */
/* custom webflow css */

.body {
  font-family: Bitter, serif;
}

.recent_work_new {
  font-family: 'Nhaasgroteskdspro 45lt', sans-serif;
  color: #060;
  font-size: 22px;
  line-height: 60px;
}

.recent_work_purchase_option {
  display: inline-block;
  margin-top: 18px;
  font-family: Garamondpremrpro, sans-serif;
  color: #6b6b6b;
  font-size: 22px;
  line-height: 60px;
  text-decoration: none;
  text-transform: uppercase;
}

.recent_work_purchase_decoration {
  width: 160px;
  margin-left: 30px;
  padding-top: 0px;
  border-bottom: 2px solid #b4b4b4;
}

@font-face {
  font-family: 'Nhaasgroteskdspro 45lt';
  src: url('../fonts/neue_haas/NHaasGroteskDSPro-45Lt.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: 'Garamondpremrpro';
  src: url('../fonts/garamond/GaramondPremrPro.otf') format('opentype');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
/*! tailwindcss v2.2.4 | MIT License | https://tailwindcss.com */

/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
::before,
::after {
  box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
  margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
  font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

/**
Add the correct font weight in Edge and Safari.
*/

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

/**
Add the correct font size in all browsers.
*/

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

/**
Correct the inability to style clickable types in iOS and Safari.
*/

/**
Remove the inner border and padding in Firefox.
*/

/**
Restore the focus styles unset by the previous rule.
*/

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */


h1 {
  margin: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 1 */
  line-height: 1.5;
  /* 2 */
}

/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

h1 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */

img {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img {
  max-width: 100%;
  height: auto;
}

*, ::before, ::after {
  --tw-border-opacity: 1;
  border-color: rgba(229, 231, 235, var(--tw-border-opacity));
}

.flex {
  display: flex;
}

.w-1 {
  width: 0.25rem;
}

.w-3 {
  width: 0.75rem;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    -webkit-animation-timing-function: cubic-bezier(0.8,0,1,1);
            animation-timing-function: cubic-bezier(0.8,0,1,1);
  }

  50% {
    transform: none;
    -webkit-animation-timing-function: cubic-bezier(0,0,0.2,1);
            animation-timing-function: cubic-bezier(0,0,0.2,1);
  }
}

.flex-row-reverse {
  flex-direction: row-reverse;
}

.p-8 {
  padding: 2rem;
}

.p-16 {
  padding: 4rem;
}

.pt-16 {
  padding-top: 4rem;
}

.pr-16 {
  padding-right: 4rem;
}

.pb-16 {
  padding-bottom: 4rem;
}

*, ::before, ::after {
  --tw-shadow: 0 0 #0000;
}

*, ::before, ::after {
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
}